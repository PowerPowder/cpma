Storage Class = SC, Type Qualifiers = TQ, Type Specifiers = TS, Declarators = D, Initializers = I
1.  a) static char **lookup(int level);
        SC: static
        TQ: N/A
        TS: char **
        D:  lookup
        I:  N/A
    b) volatile unsigned long io_flags;
        SC: auto (default)
        TQ: volatile
        TS: unsigned long
        D:  io_flags
        I:  N/A
    c) extern char *file_name[MAX_FILES], path[];
        SC: extern
        TQ: N/A
        TS: char *
        D:  file_nme[MAX_FILES], path[]
        I:  N/A
    d) static const char token_buf[] = "";
        SC: static
        TQ: const
        TS: char
        D:  token_buf[]
        I:  ""

2.  a) auto, extern
    b) auto, register, static
    c) static

3.  extern float a;

    void f(register double b)
    {
        static int c;
        auto char d;
    }

    a: automatic storage duration, file scope, external linkage
    b: static storage duration, block scope, no linkage
    c: static storage duration, file scope, internal linkage
    d: automatic storage duration, block scope, internal linkage

4.  int f(int i)
    {
        static int j = 0;
        return i * j++;
    }

    value of f(10) being called for the first time: 10 * 0 = 0
    value of f(10) after being called 5 times: 10 * 5 = 50

5.  a) Every variable with static duration has file scope.
        False - if a variable is static or extern within a function it is block scope.
    b) Every variable declared inside a function has no linkage.
        False - if the variable is extern then it may have external linkage.
    c) Every variable with internal linkage has static storage duration. 
        True  - when a variable is static, it is only allowed to be used in that file.
    d) Every parameter has block scope. 
        True  - all parameters are always relative to the function because they are only defined for the function.

6.  void print_error(const char *message)
    {
        int n = 1;
        printf("Error %d: %s\n", n++, message);
    }

    n should be static, resulting in the line being 'static int n = 1', then n will retain it's value
    each time print_error is called.

7.  a) If x is of type int, it can be used as the value of a case label in a switch statement. False
    b) The compiler will check that no assignment is made to x. True
    c) x is subject to the same scope rules as variables. True
    d) x can be of any type. True